---
# tasks file for docker-transmission
- include_tasks: "{{ansible_os_family}}.yml"
  tags:
    - libreNMS

- name: Install python bindings for docker
  pip:
    name: docker-py
  tags:
    - libreNMS

- name: Create Docker paths
  file:
    path: "{{ docker_libreNMS_storage }}/{{ item }}"
    state: directory
    mode: 0775
  with_items:
    - logs
    - rrd
    - config
    - mariadb/data
    - mariadb/config
  tags:
    - libreNMS
    - mariadb

- name: Install interfaces Configuration File
  template:
    src: config.interfaces.php.j2
    dest: "{{ docker_libreNMS_storage }}/config/config.interfaces.php"
    mode: 0644
  tags:
    - libreNMS

- name: Install influxDB Configuration File
  template:
    src: config.influx.php.j2
    dest: "{{ docker_libreNMS_storage }}/config/config.influx.php"
    mode: 0644
  tags:
    - libreNMS

- name: Install custom Configuration File
  template:
    src: config.influx.php.j2
    dest: "{{ docker_libreNMS_storage }}/config/config.influx.php"
    mode: 0644
  tags:
    - libreNMS

# - name: Create network for LibreNMS
#   docker_network:
#     name: libreNMS_net
#     ipam_options:
#       subnet: '192.168.2.1/24'
#       gateway: 192.168.2.1
#     state: absent
#   tags:
#     - libreNMS

# - name: Create and Update LibreNMS Database
#   docker_container:
#     name: libreNMS_db
#     image: mariadb
#     state: started
#     restart_policy: unless-stopped
#     recreate: false
#     restart: false
#     pull: true
#     exposed_ports:
#       - 3306
#     volumes:
#       - "{{ docker_libreNMS_storage }}/mariadb/data:/var/lib/mysql"
#     env:
#       MYSQL_ROOT_PASSWORD: "{{ docker_libreNMS_sql_root_password }}"
#       MYSQL_DATABASE: "{{ docker_libreNMS_sql_database_name }}"
#       MYSQL_USER: "{{ docker_libreNMS_sql_username }}"
#       MYSQL_PASSWORD: "{{ docker_libreNMS_sql_password }}"
#   tags:
#     - libreNMS
#     - mariadb
#   # networks:
#   #   - name: libreNMS_net
#   #     ipv4_address: 192.168.2.2

- name: Create and Update LibreNMS Container
  docker_container:
    name: libreNMS
    image: jarischaefer/docker-librenms
    state: started
    restart_policy: unless-stopped
    recreate: yes
    restart: yes
    pull: true
    exposed_ports:
      - 80
    published_ports:
      - 8668:80
    volumes:
      - "{{ docker_libreNMS_storage }}/logs:/opt/librenms/logs"
      - "{{ docker_libreNMS_storage }}/rrd:/opt/librenms/rrd"
      - "{{ docker_libreNMS_storage }}/config/config.interfaces.php:/opt/librenms/conf.d/config.interfaces.php"
      - "{{ docker_libreNMS_storage }}/config/config.influx.php:/opt/librenms/conf.d/config.influx.php"
    env:
      DB_HOST: "{{ docker_libreNMS_sql_ip }}"
      DB_PORT: "{{ docker_libreNMS_sql_port }}"
      DB_USER: "{{ docker_libreNMS_sql_username }}"
      DB_PASS: "{{ docker_libreNMS_sql_password }}"
      DB_NAME: "{{ docker_libreNMS_sql_database_name }}"
      PUID: "{{ docker_libreNMS_PUID }}"
      PGID: "{{ docker_libreNMS_PGID }}"
      TZ: "America/Chicago"
      BASE_URL: "{{ docker_libreNMS_base_url }}"
      POLLERS: 16
      DISCOVERY_ENABLE: true
      DISCOVERY_THREADS: 8
      ALERTS_ENABLE: false
    links:
      - "libreNMS_db:db"
  tags:
    - libreNMS


- name: fix LibreNMS paths
  command: docker exec -i libreNMS /bin/chown -R librenms:librenms /opt/librenms/bootstrap/cache /opt/librenms/storage /opt/librenms/storage/framework/sessions /opt/librenms/storage/framework/views /opt/librenms/storage/framework/cache
  tags:
    - libreNMS

- name: Add a container to a network, leaving existing containers connected
  docker_network:
    name: libreNMS_net
    connected:
      - libreNMS
      - libreNMS-db
    appends: yes

- name: Open Ports for LibreNMS firewallD
  firewalld:
    port: "{{ item }}"
    permanent: true
    state: enabled
  with_items:
    - "{{ docker_ports }}"
  notify: Restart firewalld
  when: ansible_distribution == "CentOS"
  tags:
    - libreNMS

- name: Open Ports for LibreNMS UFW
  ufw:
    port: "{{ item }}"
    rule: allow
  with_items:
    - "{{ docker_portsUFW }}"
  notify: Restart UFW
  when: ansible_distribution == "Ubuntu"
  tags:
    - libreNMS

- name: Install Python influxDB Client
  pip:
    state: present
    name: influxdb
  when: "docker_libreNMS_influxdb  == true"
  tags:
    - libreNMS

# - name: Create influxDB Database for LibreNMS
#   influxdb_database:
#       hostname: "{{ docker_libreNMS_influxdb_ip }}"
#       database_name: "{{ docker_libreNMS_influxdb_database_name }}"
#       port: "{{ docker_libreNMS_influxdb_port }}"
#       username: "{{ docker_libreNMS_influxdb_username }}"
#       password: "{{ docker_libreNMS_influxdb_password }}"
#       state: present
#   when: "docker_libreNMS_influxdb  == true"